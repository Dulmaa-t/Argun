{"ast":null,"code":"var _jsxFileName = \"/Users/maidar/Desktop/projects-d/gasp/src/pages/Admin/Pages/Config/ConfigText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfigText(_ref) {\n  _s();\n\n  let {\n    configName,\n    title = \"\"\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const [isEditing, setEditing] = useState();\n\n  const handleChange = e => {\n    const changedValue = e.target.value;\n    setValue(changedValue);\n  };\n\n  const getConfig = async () => {\n    const {\n      success,\n      data,\n      error\n    } = await axios.get(`/api/config/?names=${configName}`).catch(err => err);\n\n    if (success) {\n      var _data$;\n\n      setValue((data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || \"\");\n    }\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  const onSubmit = async () => {\n    const body = {\n      configs: {\n        name: configName,\n        value: value\n      }\n    };\n    const {\n      success,\n      data,\n      error,\n      info\n    } = await axios.put(`/api/config/`, body).catch(err => err);\n\n    if (success) {\n      toast.success(`${title} заслаа`);\n    } else {\n      toast.error(`${title}: ${error}`);\n    }\n  };\n\n  const handleClick = () => {\n    const changed = !isEditing;\n\n    if (!changed) {\n      onSubmit();\n    }\n\n    setEditing(changed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: configName,\n      children: [title, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: configName,\n      readOnly: !isEditing,\n      onChange: handleChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: isEditing ? \"save\" : \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfigText, \"q2D535AS7evAP8skgl9ICfURaIs=\");\n\n_c = ConfigText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigText\");","map":{"version":3,"sources":["/Users/maidar/Desktop/projects-d/gasp/src/pages/Admin/Pages/Config/ConfigText.js"],"names":["React","useEffect","useState","toast","axios","ConfigText","configName","title","value","setValue","isEditing","setEditing","handleChange","e","changedValue","target","getConfig","success","data","error","get","catch","err","onSubmit","body","configs","name","info","put","handleClick","changed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,eAAe,SAASC,UAAT,OAA8C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAK,GAAC;AAApB,GAA0B;AAEzD,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEQ,SAAF,EAAaC,UAAb,IAA4BT,QAAQ,EAA1C;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IACrB;AACI,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASP,KAA9B;AACAC,IAAAA,QAAQ,CAACK,YAAD,CAAR;AACH,GAJD;;AAMA,QAAME,SAAS,GAAG,YAClB;AACI,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,QAA2B,MAAMf,KAAK,CAACgB,GAAN,CAAW,sBAAqBd,UAAW,EAA3C,EAA8Ce,KAA9C,CAAoDC,GAAG,IAAIA,GAA3D,CAAvC;;AACA,QAAIL,OAAJ,EACA;AAAA;;AACIR,MAAAA,QAAQ,CAAC,CAAAS,IAAI,SAAJ,IAAAA,IAAI,WAAJ,sBAAAA,IAAI,CAAG,CAAH,CAAJ,kDAAWV,KAAX,KAAoB,EAArB,CAAR;AACH;AACJ,GAPD;;AASAP,EAAAA,SAAS,CACL,MACA;AACIe,IAAAA,SAAS;AACZ,GAJI,EAKL,EALK,CAAT;;AAQA,QAAMO,QAAQ,GAAG,YACjB;AACI,UAAMC,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEpB,UADD;AAELE,QAAAA,KAAK,EAAEA;AAFF;AADA,KAAb;AAMA,UAAM;AAAES,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,KAAjB;AAAwBQ,MAAAA;AAAxB,QAAiC,MAAMvB,KAAK,CAACwB,GAAN,CAAW,cAAX,EAA0BJ,IAA1B,EAAgCH,KAAhC,CAAsCC,GAAG,IAAIA,GAA7C,CAA7C;;AACA,QAAIL,OAAJ,EACA;AACId,MAAAA,KAAK,CAACc,OAAN,CAAe,GAAEV,KAAM,SAAvB;AACH,KAHD,MAIK;AACDJ,MAAAA,KAAK,CAACgB,KAAN,CAAa,GAAEZ,KAAM,KAAIY,KAAM,EAA/B;AACH;AACJ,GAhBD;;AAkBA,QAAMU,WAAW,GAAG,MACpB;AACI,UAAMC,OAAO,GAAG,CAACpB,SAAjB;;AACA,QAAI,CAACoB,OAAL,EACA;AACIP,MAAAA,QAAQ;AACX;;AACDZ,IAAAA,UAAU,CAACmB,OAAD,CAAV;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAExB,UAAhB;AAAA,iBAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAED,UAAvB;AAAmC,MAAA,QAAQ,EAAE,CAACI,SAA9C;AAAyD,MAAA,QAAQ,EAAEE,YAAnE;AAAiF,MAAA,KAAK,EAAEJ;AAAxF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEqB,WAAjB;AAAA,gBAA+BnB,SAAS,GAAG,MAAH,GAAY;AAApD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/DuBL,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\n\nimport axios from 'utils/axios'\n\nexport default function ConfigText({ configName, title=\"\" }) {\n\n    const [ value, setValue ] = useState(\"\")\n    const [ isEditing, setEditing ] = useState()\n\n    const handleChange = (e) =>\n    {\n        const changedValue = e.target.value\n        setValue(changedValue)\n    }\n\n    const getConfig = async () =>\n    {\n        const { success, data, error } = await axios.get(`/api/config/?names=${configName}`).catch(err => err)\n        if (success)\n        {\n            setValue(data?.[0]?.value || \"\")\n        }\n    }\n\n    useEffect(\n        () =>\n        {\n            getConfig()\n        },\n        []\n    )\n\n    const onSubmit = async () =>\n    {\n        const body = {\n            configs: {\n                name: configName,\n                value: value\n            }\n        }\n        const { success, data, error, info } = await axios.put(`/api/config/`, body).catch(err => err)\n        if (success)\n        {\n            toast.success(`${title} заслаа`)\n        }\n        else {\n            toast.error(`${title}: ${error}`)\n        }\n    }\n\n    const handleClick = () =>\n    {\n        const changed = !isEditing\n        if (!changed)\n        {\n            onSubmit()\n        }\n        setEditing(changed)\n    }\n\n    return (\n        <div>\n            <label htmlFor={configName}>{title}:</label>\n            <input type=\"text\" id={configName} readOnly={!isEditing} onChange={handleChange} value={value} />\n            <button onClick={handleClick}>{isEditing ? \"save\" : \"edit\"}</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}