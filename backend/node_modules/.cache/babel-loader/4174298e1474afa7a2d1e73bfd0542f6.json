{"ast":null,"code":"var _jsxFileName = \"/Users/maidar/Desktop/projects-d/gasp/src/pages/Podcast/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Footer from '../Home/Footer';\nimport HeaderMenu from '../../components/special/HeaderMenu';\nimport Card from '../../components/main/podcastCard';\nimport MoreBtn from '../../components/special/MoreBtn';\nimport axios from 'utils/axios';\nimport { timeZoneToDateString, msToTime } from 'utils/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PodcastCard() {\n  _s();\n\n  /** podcast ийн мэдээллийг хадгалах state */\n  const [podcastCard, setPodcast] = useState([]);\n  const location = useLocation();\n  /** podcast ийн мэдээллийг back аас дуудах нь */\n\n  const getData = async () => {\n    /** url ээс дарагдсан category байгаа эсэхийг анх орохдоо шалгах нь */\n    const paramCatName = new URLSearchParams(location.search).get(\"category\");\n    await axios.get(`/api/podcast/${paramCatName ? `?category=${paramCatName}` : \"\"}`).then(_ref => {\n      let {\n        success,\n        data,\n        error\n      } = _ref;\n\n      if (success) {\n        setPodcast(data);\n      }\n    }).catch(err => {});\n  };\n\n  useEffect(() => {\n    //  podcast ийн мэдээллийг back аас дуудах нь\n    getData();\n  }, []);\n  /** Ямар category дарагдсан түүнийг авах функц */\n\n  const handleCategory = async catName => {\n    const {\n      success,\n      data,\n      error\n    } = await axios.get(`/api/podcast/?category=${catName}`);\n\n    if (success) {\n      setPodcast(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderMenu, {\n      handleCategory: handleCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-4\",\n        children: [podcastCard.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            image: process.env.REACT_APP_SERVER_URL + element.image,\n            title: element.title,\n            dateTime: timeZoneToDateString(element.createdAt),\n            clock: msToTime(3600000),\n            text: element.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this);\n        }), // хэрэв podcast байхгүй бол\n        podcastCard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: \"\\u0425\\u043E\\u043E\\u0441\\u043E\\u043D \\u0431\\u0430\\u0439\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MoreBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PodcastCard, \"dXJXVPaSnpu96ViC94K9hkGfQEo=\", false, function () {\n  return [useLocation];\n});\n\n_c = PodcastCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastCard\");","map":{"version":3,"sources":["/Users/maidar/Desktop/projects-d/gasp/src/pages/Podcast/index.jsx"],"names":["React","useState","useEffect","useLocation","Footer","HeaderMenu","Card","MoreBtn","axios","timeZoneToDateString","msToTime","PodcastCard","podcastCard","setPodcast","location","getData","paramCatName","URLSearchParams","search","get","then","success","data","error","catch","err","handleCategory","catName","map","element","index","process","env","REACT_APP_SERVER_URL","image","title","createdAt","text","length","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport Footer from '../Home/Footer'\nimport HeaderMenu from '../../components/special/HeaderMenu'\nimport Card from '../../components/main/podcastCard'\nimport MoreBtn from '../../components/special/MoreBtn'\n\nimport axios from 'utils/axios'\nimport { timeZoneToDateString, msToTime } from 'utils/index'\n\nexport default function PodcastCard() {\n\n  /** podcast ийн мэдээллийг хадгалах state */\n  const [ podcastCard, setPodcast ] = useState([])\n  const location = useLocation()\n\n  /** podcast ийн мэдээллийг back аас дуудах нь */\n  const getData = async () =>\n  {\n    /** url ээс дарагдсан category байгаа эсэхийг анх орохдоо шалгах нь */\n    const paramCatName = new URLSearchParams(location.search).get(\"category\")\n    await axios.get(`/api/podcast/${paramCatName ? `?category=${paramCatName}` : \"\"}`)\n      .then(({ success, data, error }) =>\n        {\n          if (success)\n          {\n            setPodcast(data)\n          }\n        }\n      )\n      .catch(err =>\n        {\n\n        }\n      )\n  }\n\n  useEffect(\n    () =>\n    {\n      //  podcast ийн мэдээллийг back аас дуудах нь\n      getData()\n    },\n    []\n  )\n\n  /** Ямар category дарагдсан түүнийг авах функц */\n  const handleCategory = async (catName) =>\n  {\n    const { success, data, error } = await axios.get(`/api/podcast/?category=${catName}`)\n    if (success)\n    {\n      setPodcast(data)\n    }\n  }\n\n  return (\n    <div>\n      <HeaderMenu handleCategory={handleCategory}/>\n        <section className=\"dark\">\n          <div className=\"container py-4\">\n            {\n              podcastCard.map(\n                (element, index) => {\n                  return (\n                    <Card\n                      key={index}\n                      image={process.env.REACT_APP_SERVER_URL + element.image}\n                      title={element.title}\n                      dateTime={timeZoneToDateString(element.createdAt)}\n                      clock={msToTime(3600000)}\n                      text={element.text}\n                    />\n                  )\n                }\n              )\n            }\n            {\n              // хэрэв podcast байхгүй бол\n              podcastCard.length === 0\n              ?\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>Хоосон байна</div>\n              :\n                null\n            }\n          </div>\n\n        </section>\n      <MoreBtn />\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}