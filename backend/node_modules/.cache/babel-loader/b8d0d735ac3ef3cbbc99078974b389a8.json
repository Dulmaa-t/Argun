{"ast":null,"code":"/**\n * тооны өмнө 0 ээр дүүргэж өгөх нь\n * @param {number} num тоо\n * @param {number} spliceNo\n * @returns 0 ээр дүүрсэн тоо\n */\nexport const fullZero = function (num) {\n  let spliceNo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -2;\n  return (\"0\" + num).slice(spliceNo);\n};\n/**\n * timezone ийг string date болгох\n * @param {string | number} timezone    date\n * @param {boolean}         hasHour     цагийг хамтад нь авах эсэх\n * @param {string}          symbol      өдрийн голд байх тэмдэгт\n * @returns бүтэн string date\n */\n\nexport function timeZoneToDateString(timezone) {\n  let hasHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let symbol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"-\";\n  let hasMs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const date = new Date(timezone);\n  /** сар */\n\n  const month = fullZero(date.getMonth() + 1);\n  /** өдөр */\n\n  const day = fullZero(date.getDate());\n  /** жил */\n\n  const year = date.getFullYear();\n  /** цаг */\n\n  const hour = fullZero(date.getHours());\n  /** минут */\n\n  const minute = fullZero(date.getMinutes());\n  /** с */\n\n  const seconds = fullZero(date.getSeconds());\n  /** мс */\n\n  const ms = date.getMilliseconds();\n  const hours = `${hour}:${minute}:${seconds}${hasMs ? `:${ms}` : \"\"}`;\n  const full = `${year}${symbol}${month}${symbol}${day}${hasHour ? \" \" + hours : \"\"}`;\n  return full;\n}\n/** mill second ийг string хугацаа руу хөрвүүлэх */\n\nexport function msToTime(ms) {\n  let time = ms;\n  let text = \"ms\";\n\n  if (ms > 1000) {\n    time = parseFloat(ms) / 1000;\n  }\n\n  if (time > 60) {\n    time = parseFloat(time) / 60;\n    text = \"min\";\n  }\n\n  if (time >= 60) {\n    time = parseFloat(time) / 60;\n    text = \"h\";\n  }\n\n  return `${time}${text}`;\n}\n/** Тухайн тоог string болгох */\n\nexport function numberToString(number) {\n  let dividedNumber = parseFloat(number);\n  let string = \"\";\n\n  if (1e6 > dividedNumber >= 1e3) {\n    dividedNumber = dividedNumber / 1e3;\n    string = \"K\";\n  } else if (1e9 > dividedNumber >= 1e6) {\n    dividedNumber = dividedNumber / 1e6;\n    string = \"M\";\n  } else if (dividedNumber >= 1e9) {\n    dividedNumber = dividedNumber / 1e9;\n    string = \"B\";\n  }\n\n  return `${dividedNumber}${string}`;\n}\n/** Өнөөдрөөс тухайн өдрийг хасах */\n\nexport function minusDate(start) {\n  let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();\n  const parsedStart = Date.parse(start);\n  const zuruuMs = end - parsedStart;\n  let time = null;\n  let string = '';\n\n  if (zuruuMs >= 1000) {\n    time = Math.floor(parseFloat(zuruuMs) / 1000);\n    string = \"seconds ago\";\n  }\n\n  if (time >= 60) {\n    time = Math.floor(parseFloat(time) / 60);\n    string = \"minutes ago\";\n  }\n\n  if (time >= 60) {\n    time = Math.floor(parseFloat(time) / 60);\n    string = \"hours ago\";\n  }\n\n  if (time >= 24) {\n    time = Math.floor(parseFloat(time) / 24);\n    string = \"days ago\";\n  }\n\n  if (time >= 30) {\n    time = Math.floor(parseFloat(time) / 24);\n    string = \"months ago\";\n  }\n\n  return `${time} ${string}`;\n}","map":{"version":3,"sources":["/Users/maidar/Desktop/projects-d/gasp/src/utils/index.js"],"names":["fullZero","num","spliceNo","slice","timeZoneToDateString","timezone","hasHour","symbol","hasMs","date","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","seconds","getSeconds","ms","getMilliseconds","hours","full","msToTime","time","text","parseFloat","numberToString","number","dividedNumber","string","minusDate","start","end","now","parsedStart","parse","zuruuMs","Math","floor"],"mappings":"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","sourcesContent":["/**\n * тооны өмнө 0 ээр дүүргэж өгөх нь\n * @param {number} num тоо\n * @param {number} spliceNo\n * @returns 0 ээр дүүрсэн тоо\n */\nexport const fullZero = (num, spliceNo=-2) => (\"0\" + num).slice(spliceNo)\n\n/**\n * timezone ийг string date болгох\n * @param {string | number} timezone    date\n * @param {boolean}         hasHour     цагийг хамтад нь авах эсэх\n * @param {string}          symbol      өдрийн голд байх тэмдэгт\n * @returns бүтэн string date\n */\nexport function timeZoneToDateString(timezone, hasHour=true, symbol=\"-\", hasMs=false)\n{\n    const date = new Date(timezone)\n\n    /** сар */\n    const month = fullZero(date.getMonth() + 1)\n    /** өдөр */\n    const day = fullZero(date.getDate())\n    /** жил */\n    const year = date.getFullYear()\n\n    /** цаг */\n    const hour = fullZero(date.getHours())\n    /** минут */\n    const minute = fullZero(date.getMinutes())\n    /** с */\n    const seconds = fullZero(date.getSeconds())\n    /** мс */\n    const ms = date.getMilliseconds()\n\n    const hours = `${hour}:${minute}:${seconds}${hasMs ? `:${ms}` : \"\"}`\n\n    const full = `${year}${symbol}${month}${symbol}${day}${hasHour ? \" \" + hours : \"\"}`\n\n    return full\n}\n\n/** mill second ийг string хугацаа руу хөрвүүлэх */\nexport function msToTime(ms)\n{\n\n    let time = ms\n    let text = \"ms\"\n\n    if (ms > 1000)\n    {\n        time = parseFloat(ms) / 1000\n    }\n    if (time > 60)\n    {\n        time = parseFloat(time) / 60\n        text = \"min\"\n    }\n    if (time >= 60)\n    {\n        time = parseFloat(time) / 60\n        text = \"h\"\n    }\n\n    return `${time}${text}`\n\n}\n\n/** Тухайн тоог string болгох */\nexport function numberToString(number)\n{\n    let dividedNumber = parseFloat(number)\n    let string = \"\"\n\n    if (1e6 > dividedNumber >= 1e3)\n    {\n        dividedNumber = dividedNumber / 1e3\n        string = \"K\"\n    }\n    else if (1e9 > dividedNumber >= 1e6)\n    {\n        dividedNumber = dividedNumber / 1e6\n        string = \"M\"\n    }\n    else if (dividedNumber >= 1e9) {\n        dividedNumber = dividedNumber / 1e9\n        string = \"B\"\n    }\n\n    return `${dividedNumber}${string}`\n}\n\n/** Өнөөдрөөс тухайн өдрийг хасах */\nexport function minusDate(start, end=Date.now())\n{\n    const parsedStart = Date.parse(start)\n    const zuruuMs = end - parsedStart\n    let time = null\n    let string = ''\n    if (zuruuMs >= 1000)\n    {\n        time = Math.floor(parseFloat(zuruuMs) / 1000)\n        string = \"seconds ago\"\n    }\n    if (time >= 60)\n    {\n        time =  Math.floor(parseFloat(time) / 60)\n        string = \"minutes ago\"\n    }\n    if (time >= 60)\n    {\n        time =  Math.floor(parseFloat(time) / 60)\n        string = \"hours ago\"\n    }\n    if (time >= 24)\n    {\n        time =  Math.floor(parseFloat(time) / 24)\n        string = \"days ago\"\n    }\n    if (time >= 30)\n    {\n        time =  Math.floor(parseFloat(time) / 24)\n        string = \"months ago\"\n    }\n\n    return `${time} ${string}`\n\n}\n"]},"metadata":{},"sourceType":"module"}