{"ast":null,"code":"var _jsxFileName = \"/Users/maidar/Desktop/projects-d/gasp/src/pages/Admin/Pages/News/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from 'utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewsForm() {\n  _s();\n\n  /** form ийн утгийг хадгалах state */\n  const [formData, setFormData] = useState({});\n  /** author ийн жагсаалтыг хадгалах state */\n\n  const [authors, setAuthors] = useState([]);\n  /** ангилалуудын жагсаалтыг хадгалах state */\n\n  const [categories, setCategories] = useState([]);\n  /** оруулсан зургийг хадгалах state */\n\n  const [image, setImage] = useState(null);\n  /** Мэдээний үндсэн мэдээллийг ref хийж хариуг нь авах нь */\n\n  const editorRef = useRef(null);\n  /** update хийж байгаа хуудас байх үед newsId байна */\n\n  const {\n    newsId\n  } = useParams();\n  /** хуудас үсрэхэд ашиглах функц */\n\n  const navigate = useNavigate();\n  /** author уудийн жагсаалтыг авах нь */\n\n  const getAuthors = async () => {\n    const {\n      success,\n      data,\n      error,\n      info\n    } = await axios.get('/api/author/');\n    /** амжилттай дата ирвэл author ийг state -д оноох нь */\n\n    if (success) {\n      setAuthors(data);\n    } else {\n      /** алдаа гарвал алдааг харуулах нь */\n      toast(error);\n    }\n  };\n  /** Ангилалуудыг авах нь */\n\n\n  const getCategories = async () => {\n    const {\n      success,\n      data,\n      error,\n      info\n    } = await axios.get('/api/category/');\n    /** амжилттай дата ирвэл ангилалийг state -д оноох нь */\n\n    if (success) {\n      setCategories(data);\n    } else {\n      /** алдаа гарвал алдааг харуулах нь */\n      toast.error(error);\n    }\n  };\n  /** мэдээний дэлгэрэнгүй авах нь */\n\n\n  const getNews = async newsId => {\n    const {\n      success,\n      data,\n      error\n    } = await axios.get(`/api/news/${newsId}/`);\n\n    if (success) {\n      data.author = data.author._id;\n      setFormData(data);\n    } else {\n      toast.error(error);\n    }\n  };\n  /** анх орж ирэхэд author ыг дуудна */\n\n\n  useEffect(() => {\n    getAuthors();\n    getCategories();\n    /** хэрвээ id байвал мэдээний дэлгэрэнгүй дуудна */\n\n    if (newsId) {\n      getNews(newsId);\n    }\n  }, []);\n  /** өөрчлөлтийг state -д хадгалах */\n\n  const handleChange = (event, key) => {\n    const value = event.target.value;\n    setFormData({ ...formData,\n      [key]: value\n    });\n  };\n  /** хадгалах үед back руу хүсэлт шидэж хадгалах функц */\n\n\n  const handleSubmit = async event => {\n    /** submit дарахад хуудас refresh хийж байгааг болиулсан */\n    event.preventDefault();\n    /** үндсэн мэдээний дэлгэрэнгүй мэдээллийг html ээр авсан нь */\n\n    const news = editorRef.current.getContent();\n    const reqFormData = new FormData();\n    reqFormData.append('title', formData.title);\n    reqFormData.append('text', formData.text);\n    reqFormData.append('author', formData.author);\n    reqFormData.append('category', formData.category);\n    reqFormData.append('news', news);\n\n    if (image) {\n      Array.from(image.target.files).map((file, idx) => reqFormData.append('image', file));\n    }\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    /** update үе нь */\n\n    if (newsId) {\n      const {\n        success,\n        data,\n        error,\n        info\n      } = await axios.put(`/api/news/${newsId}/`, reqFormData, config);\n\n      if (success) {\n        toast.success(info);\n        navigate('/admin/news/');\n      } else {\n        toast.error(error);\n      }\n\n      return;\n    }\n\n    const {\n      success,\n      data,\n      error,\n      info\n    } = await axios.post('/api/news/', reqFormData, config);\n\n    if (success) {\n      toast.success(info);\n      navigate('/admin/news/');\n    } else {\n      toast.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `page-title`,\n      children: \"\\u041C\\u044D\\u0434\\u044D\\u044D \\u04AF\\u04AF\\u0441\\u0433\\u044D\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `page-content`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"\\u0413\\u0430\\u0440\\u0447\\u0438\\u0433:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: formData.title,\n            onChange: e => handleChange(e, 'title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"author\",\n            value: formData.author,\n            onChange: e => handleChange(e, 'author'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0421\\u043E\\u043D\\u0433\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), authors.map((author, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: author._id,\n                children: author.nickName\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"\\u0422\\u0430\\u0439\\u043B\\u0431\\u0430\\u0440:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            value: formData.text,\n            onChange: e => handleChange(e, 'text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"\\u0417\\u0443\\u0440\\u0430\\u0433:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"file\",\n            onChange: setImage,\n            multiple: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0430\\u043B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            value: formData.category,\n            onChange: e => handleChange(e, 'category'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u0421\\u043E\\u043D\\u0433\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), categories.map((category, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category._id,\n                children: category.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          onInit: (evt, editor) => editorRef.current = editor,\n          initialValue: \"<p>This is the initial content of the editor.</p>\",\n          init: {\n            height: 500,\n            menubar: true,\n            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main\",\n          type: \"submit\",\n          children: \"\\u0425\\u0430\\u0434\\u0433\\u0430\\u043B\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewsForm, \"STZzh3iiCuWz9hkAgKEaYZtyQaI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NewsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsForm\");","map":{"version":3,"sources":["/Users/maidar/Desktop/projects-d/gasp/src/pages/Admin/Pages/News/form.js"],"names":["React","useEffect","useState","useRef","useParams","useNavigate","toast","Editor","axios","NewsForm","formData","setFormData","authors","setAuthors","categories","setCategories","image","setImage","editorRef","newsId","navigate","getAuthors","success","data","error","info","get","getCategories","getNews","author","_id","handleChange","event","key","value","target","handleSubmit","preventDefault","news","current","getContent","reqFormData","FormData","append","title","text","category","Array","from","files","map","file","idx","config","headers","put","post","e","nickName","name","evt","editor","height","menubar","content_style"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,eAAe,SAASC,QAAT,GACf;AAAA;;AACI;AACA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA;;AACA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA;;AACA,QAAM,CAAEY,UAAF,EAAcC,aAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA;;AACA,QAAM,CAAEc,KAAF,EAASC,QAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AAEA;;AACA,QAAMgB,SAAS,GAAGf,MAAM,CAAC,IAAD,CAAxB;AAEA;;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAaf,SAAS,EAA5B;AAEA;;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AAEA;;AACA,QAAMgB,UAAU,GAAG,YACnB;AACI,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAiC,MAAMjB,KAAK,CAACkB,GAAN,CAAU,cAAV,CAA7C;AACA;;AACA,QAAIJ,OAAJ,EACA;AACIT,MAAAA,UAAU,CAACU,IAAD,CAAV;AACH,KAHD,MAIK;AACD;AACAjB,MAAAA,KAAK,CAACkB,KAAD,CAAL;AACH;AACJ,GAZD;AAcA;;;AACA,QAAMG,aAAa,GAAG,YACtB;AACI,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAiC,MAAMjB,KAAK,CAACkB,GAAN,CAAU,gBAAV,CAA7C;AACA;;AACA,QAAIJ,OAAJ,EACA;AACIP,MAAAA,aAAa,CAACQ,IAAD,CAAb;AACH,KAHD,MAIK;AACD;AACAjB,MAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAZ;AACH;AACJ,GAZD;AAcA;;;AACA,QAAMI,OAAO,GAAG,MAAOT,MAAP,IAChB;AACI,UAAM;AAAEG,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,QAA2B,MAAMhB,KAAK,CAACkB,GAAN,CAAW,aAAYP,MAAO,GAA9B,CAAvC;;AACA,QAAIG,OAAJ,EACA;AACIC,MAAAA,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACM,MAAL,CAAYC,GAA1B;AACAnB,MAAAA,WAAW,CAACY,IAAD,CAAX;AACH,KAJD,MAKK;AACDjB,MAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAZ;AACH;AACJ,GAXD;AAaA;;;AACAvB,EAAAA,SAAS,CAAC,MACV;AACIoB,IAAAA,UAAU;AACVM,IAAAA,aAAa;AACb;;AACA,QAAIR,MAAJ,EACA;AACIS,MAAAA,OAAO,CAACT,MAAD,CAAP;AACH;AACJ,GATQ,EASN,EATM,CAAT;AAWA;;AACA,QAAMY,YAAY,GAAG,CAACC,KAAD,EAAQC,GAAR,KACrB;AACI,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AACAvB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACuB,GAAD,GAAOC;AAAtB,KAAD,CAAX;AACH,GAJD;AAMA;;;AACA,QAAME,YAAY,GAAG,MAAOJ,KAAP,IACrB;AACI;AACAA,IAAAA,KAAK,CAACK,cAAN;AAEA;;AACA,UAAMC,IAAI,GAAGpB,SAAS,CAACqB,OAAV,CAAkBC,UAAlB,EAAb;AAEA,UAAMC,WAAW,GAAG,IAAIC,QAAJ,EAApB;AACAD,IAAAA,WAAW,CAACE,MAAZ,CAAmB,OAAnB,EAA4BjC,QAAQ,CAACkC,KAArC;AACAH,IAAAA,WAAW,CAACE,MAAZ,CAAmB,MAAnB,EAA2BjC,QAAQ,CAACmC,IAApC;AACAJ,IAAAA,WAAW,CAACE,MAAZ,CAAmB,QAAnB,EAA6BjC,QAAQ,CAACmB,MAAtC;AACAY,IAAAA,WAAW,CAACE,MAAZ,CAAmB,UAAnB,EAA+BjC,QAAQ,CAACoC,QAAxC;AACAL,IAAAA,WAAW,CAACE,MAAZ,CAAmB,MAAnB,EAA2BL,IAA3B;;AAEA,QAAItB,KAAJ,EACA;AACI+B,MAAAA,KAAK,CAACC,IAAN,CAAWhC,KAAK,CAACmB,MAAN,CAAac,KAAxB,EAA+BC,GAA/B,CAAmC,CAACC,IAAD,EAAOC,GAAP,KAAeX,WAAW,CAACE,MAAZ,CAAmB,OAAnB,EAA4BQ,IAA5B,CAAlD;AACH;;AAED,UAAME,MAAM,GACZ;AACIC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADb,KADA;AAKA;;AACA,QAAInC,MAAJ,EACA;AACI,YAAM;AAAEG,QAAAA,OAAF;AAAWC,QAAAA,IAAX;AAAiBC,QAAAA,KAAjB;AAAwBC,QAAAA;AAAxB,UAAiC,MAAMjB,KAAK,CAAC+C,GAAN,CAAW,aAAYpC,MAAO,GAA9B,EAAkCsB,WAAlC,EAA+CY,MAA/C,CAA7C;;AACA,UAAI/B,OAAJ,EACA;AACIhB,QAAAA,KAAK,CAACgB,OAAN,CAAcG,IAAd;AACAL,QAAAA,QAAQ,CAAC,cAAD,CAAR;AACH,OAJD,MAKK;AACDd,QAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAZ;AACH;;AACD;AACH;;AACD,UAAM;AAAEF,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAAiC,MAAMjB,KAAK,CAACgD,IAAN,CAAW,YAAX,EAAyBf,WAAzB,EAAsCY,MAAtC,CAA7C;;AACA,QAAI/B,OAAJ,EACA;AACIhB,MAAAA,KAAK,CAACgB,OAAN,CAAcG,IAAd;AACAL,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH,KAJD,MAKK;AACDd,MAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAZ;AACH;AACJ,GAhDD;;AAkDA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEY,YAAhB;AAAA,gCACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,KAAK,EAAE1B,QAAQ,CAACkC,KAHpB;AAII,YAAA,QAAQ,EAAGa,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAI,OAAJ;AAJjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,QADP;AAEI,YAAA,KAAK,EAAE/C,QAAQ,CAACmB,MAFpB;AAGI,YAAA,QAAQ,EAAG4B,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAI,QAAJ,CAHjC;AAAA,oCAKI;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAOQ7C,OAAO,CAACsC,GAAR,CACI,CAACrB,MAAD,EAASuB,GAAT,KACA;AACI,kCACI;AAAkB,gBAAA,KAAK,EAAEvB,MAAM,CAACC,GAAhC;AAAA,0BACKD,MAAM,CAAC6B;AADZ,iBAAaN,GAAb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aARL,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAgCI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,MADP;AAEI,YAAA,KAAK,EAAE1C,QAAQ,CAACmC,IAFpB;AAGI,YAAA,QAAQ,EAAGY,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAI,MAAJ;AAHjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAyCI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,OADP;AAEI,YAAA,IAAI,EAAE,MAFV;AAGI,YAAA,QAAQ,EAAExC,QAHd;AAII,YAAA,QAAQ,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ,eAmDI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,KAAK,EAAEP,QAAQ,CAACoC,QAFpB;AAGI,YAAA,QAAQ,EAAGW,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAI,UAAJ,CAHjC;AAAA,oCAKI;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAOQ3C,UAAU,CAACoC,GAAX,CACI,CAACJ,QAAD,EAAWM,GAAX,KACA;AACI,kCACI;AAAkB,gBAAA,KAAK,EAAEN,QAAQ,CAAChB,GAAlC;AAAA,0BACKgB,QAAQ,CAACa;AADd,iBAAaP,GAAb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aARL,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDJ,eAyEI,QAAC,MAAD;AACI,UAAA,MAAM,EAAE,CAACQ,GAAD,EAAMC,MAAN,KAAiB3C,SAAS,CAACqB,OAAV,GAAoBsB,MADjD;AAEI,UAAA,YAAY,EAAC,mDAFjB;AAGI,UAAA,IAAI,EAAE;AACFC,YAAAA,MAAM,EAAE,GADN;AAEFC,YAAAA,OAAO,EAAE,IAFP;AAGFC,YAAAA,aAAa,EAAE;AAHb;AAHV;AAAA;AAAA;AAAA;AAAA,gBAzEJ,eAkFI;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA6FH;;GAnOuBvD,Q;UAeDL,S,EAGFC,W;;;KAlBGI,Q","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { Editor } from '@tinymce/tinymce-react';\n\nimport axios from 'utils/axios'\n\nexport default function NewsForm()\n{\n    /** form ийн утгийг хадгалах state */\n    const [ formData, setFormData ] = useState({})\n    /** author ийн жагсаалтыг хадгалах state */\n    const [ authors, setAuthors ] = useState([])\n    /** ангилалуудын жагсаалтыг хадгалах state */\n    const [ categories, setCategories ] = useState([])\n    /** оруулсан зургийг хадгалах state */\n    const [ image, setImage ] = useState(null)\n\n    /** Мэдээний үндсэн мэдээллийг ref хийж хариуг нь авах нь */\n    const editorRef = useRef(null);\n\n    /** update хийж байгаа хуудас байх үед newsId байна */\n    const { newsId } = useParams()\n\n    /** хуудас үсрэхэд ашиглах функц */\n    const navigate = useNavigate()\n\n    /** author уудийн жагсаалтыг авах нь */\n    const getAuthors = async () =>\n    {\n        const { success, data, error, info } = await axios.get('/api/author/')\n        /** амжилттай дата ирвэл author ийг state -д оноох нь */\n        if (success)\n        {\n            setAuthors(data)\n        }\n        else {\n            /** алдаа гарвал алдааг харуулах нь */\n            toast(error)\n        }\n    }\n\n    /** Ангилалуудыг авах нь */\n    const getCategories = async () =>\n    {\n        const { success, data, error, info } = await axios.get('/api/category/')\n        /** амжилттай дата ирвэл ангилалийг state -д оноох нь */\n        if (success)\n        {\n            setCategories(data)\n        }\n        else {\n            /** алдаа гарвал алдааг харуулах нь */\n            toast.error(error)\n        }\n    }\n\n    /** мэдээний дэлгэрэнгүй авах нь */\n    const getNews = async (newsId) =>\n    {\n        const { success, data, error } = await axios.get(`/api/news/${newsId}/`)\n        if (success)\n        {\n            data.author = data.author._id\n            setFormData(data)\n        }\n        else {\n            toast.error(error)\n        }\n    }\n\n    /** анх орж ирэхэд author ыг дуудна */\n    useEffect(() =>\n    {\n        getAuthors()\n        getCategories()\n        /** хэрвээ id байвал мэдээний дэлгэрэнгүй дуудна */\n        if (newsId)\n        {\n            getNews(newsId)\n        }\n    }, [])\n\n    /** өөрчлөлтийг state -д хадгалах */\n    const handleChange = (event, key) =>\n    {\n        const value = event.target.value\n        setFormData({ ...formData, [key]: value })\n    }\n\n    /** хадгалах үед back руу хүсэлт шидэж хадгалах функц */\n    const handleSubmit = async (event) =>\n    {\n        /** submit дарахад хуудас refresh хийж байгааг болиулсан */\n        event.preventDefault()\n\n        /** үндсэн мэдээний дэлгэрэнгүй мэдээллийг html ээр авсан нь */\n        const news = editorRef.current.getContent()\n\n        const reqFormData = new FormData()\n        reqFormData.append('title', formData.title)\n        reqFormData.append('text', formData.text)\n        reqFormData.append('author', formData.author)\n        reqFormData.append('category', formData.category)\n        reqFormData.append('news', news)\n\n        if (image)\n        {\n            Array.from(image.target.files).map((file, idx) => reqFormData.append('image', file))\n        }\n\n        const config =\n        {\n            headers: { 'content-type': 'multipart/form-data' }\n        }\n\n        /** update үе нь */\n        if (newsId)\n        {\n            const { success, data, error, info } = await axios.put(`/api/news/${newsId}/`, reqFormData, config)\n            if (success)\n            {\n                toast.success(info)\n                navigate('/admin/news/')\n            }\n            else {\n                toast.error(error)\n            }\n            return\n        }\n        const { success, data, error, info } = await axios.post('/api/news/', reqFormData, config)\n        if (success)\n        {\n            toast.success(info)\n            navigate('/admin/news/')\n        }\n        else {\n            toast.error(error)\n        }\n    }\n\n    return (\n        <>\n            <h1 className={`page-title`}>Мэдээ үүсгэх</h1>\n            <div className={`page-content`}>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"title\">Гарчиг:</label>\n                        <input\n                            type=\"text\"\n                            id='title'\n                            value={formData.title}\n                            onChange={(e) => handleChange(e, 'title')}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"author\">Author:</label>\n                        <select\n                            id=\"author\"\n                            value={formData.author}\n                            onChange={(e) => handleChange(e, 'author')}\n                        >\n                            <option value=\"\">Сонго</option>\n                            {\n                                authors.map(\n                                    (author, idx) =>\n                                    {\n                                        return (\n                                            <option key={idx} value={author._id}>\n                                                {author.nickName}\n                                            </option>\n                                        )\n                                    }\n                                )\n                            }\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"text\">Тайлбар:</label>\n                        <textarea\n                            id=\"text\"\n                            value={formData.text}\n                            onChange={(e) => handleChange(e, 'text')}\n                        >\n                        </textarea>\n                    </div>\n                    <div>\n                        <label htmlFor=\"image\">Зураг:</label>\n                        <input\n                            id=\"image\"\n                            type={\"file\"}\n                            onChange={setImage}\n                            multiple={false}\n                        >\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor=\"category\">Ангилал:</label>\n                        <select\n                            id=\"category\"\n                            value={formData.category}\n                            onChange={(e) => handleChange(e, 'category')}\n                        >\n                            <option value=\"\">Сонго</option>\n                            {\n                                categories.map(\n                                    (category, idx) =>\n                                    {\n                                        return (\n                                            <option key={idx} value={category._id}>\n                                                {category.name}\n                                            </option>\n                                        )\n                                    }\n                                )\n                            }\n                        </select>\n                    </div>\n                    <Editor\n                        onInit={(evt, editor) => editorRef.current = editor}\n                        initialValue=\"<p>This is the initial content of the editor.</p>\"\n                        init={{\n                            height: 500,\n                            menubar: true,\n                            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n                        }}\n                    />\n                    <button className='main' type='submit'>\n                        Хадгалах\n                    </button>\n                </form>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}